set.seed(41)
cauchyValues = rcauchy(100, location = 0, scale = 1)
set.seed(415)
x = 1:10
sample(cauchyValues,length(cauchyValues),replace = TRUE)
?type
?.fixSFFclipPoints2Iranges
?FastqQuality
?as.list
?rbind
?sum
\documentclass{article}
?shiny
?max
?sum
?rep
?factor
?int
??int
?range
?for
library(ape)
ans <- read.nexus("~/Dropbox/PuRGe Missing Data/Data/Campanulid_Complete_Dataset_77_Taxa_tweaked.nex")
ans <- read.nexus("~/Dropbox/PuRGe Missing Data/Data/Campanulid_Complete_Dataset_77_Taxa_tweaked.nex")
ans <- read.nexus("~/Dropbox/PuRGe Missing Data/Data/Rokas_106_yeast_genes.nex")
ans <- read.nexus("~/Dropbox/PuRGe Missing Data/Data/Campanulid_127_Taxa_Some_Missing_Data.nex")
ans <- read.nexus("~/Dropbox/Foster/nexus_test.nex")
?read.nexus
ans <- read.nexus.data("~/Dropbox/Foster/nexus_test.nex")
ans
ans <- read.nexus("~/Dropbox/PuRGe Missing Data/Data/Campanulid_127_Taxa_Some_Missing_Data.nex")
ans <- read.nexus.data("~/Dropbox/PuRGe Missing Data/Data/Campanulid_127_Taxa_Some_Missing_Data.nex")
ans <- read.nexus.data("~/Dropbox/PuRGe Missing Data/Data/Complete_Dataset_79_taxa/")
ans <- read.nexus.data("~/Dropbox/PuRGe Missing Data/Data/Complete_Dataset_79_taxa/Campanulid_Complete_Dataset_79_Taxa_Decisivator.nex")
ans
fix(ans)
ans <- read.nexus.data("~/Dropbox/PuRGe Missing Data/Data/Complete_Dataset_79_taxa/Campanulid_Complete_Dataset_79_Taxa_Decisivator.nex")
library(ape)
ans <- read.nexus.data("~/Dropbox/PuRGe Missing Data/Data/Complete_Dataset_79_taxa/Campanulid_Complete_Dataset_79_Taxa_Decisivator.nex")
ans
ans$Corokia
ans$Corokia[1]
ans$Corokia[2]
ans$Corokia[20]
ans$Corokia[[20]]
ans$Corokia[[24]]
ans$Corokia[[240]]
ans$Corokia[240]
ans$Spinacia
length(ans)
install.packages("cluster")
?agnes
library(cluster)
?agnes
?hclust
library(ape)
### From Saitou and Nei (1987, Table 1):
x <- c(7, 8, 11, 13, 16, 13, 17, 5, 8, 10, 13,
10, 14, 5, 7, 10, 7, 11, 8, 11, 8, 12,
5, 6, 10, 9, 13, 8)
M <- matrix(0, 8, 8)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- 1:8
tr <- nj(M)
plot(tr, "u")
### a less theoretical example
data(woodmouse)
trw <- nj(dist.dna(woodmouse))
plot(trw)
View(M)
View(data)
### From Saitou and Nei (1987, Table 1):
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- 1:8
tr <- nj(M)
plot(tr, "u")
### a less theoretical example
data(woodmouse)
trw <- nj(dist.dna(woodmouse))
plot(trw)
### From Saitou and Nei (1987, Table 1):
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- 1:4
tr <- nj(M)
plot(tr, "u")
### a less theoretical example
data(woodmouse)
trw <- nj(dist.dna(woodmouse))
plot(trw)
library(ape)
### From Saitou and Nei (1987, Table 1):
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- 1:4
tr <- nj(M)
plot(tr, "u")
### a less theoretical example
data(woodmouse)
trw <- nj(dist.dna(woodmouse))
plot(trw)
library(ape)
### From Saitou and Nei (1987, Table 1):
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- 1:4
tr <- nj(M)
plot(tr, "u")
### a less theoretical example
data(woodmouse)
trw <- nj(dist.dna(woodmouse))
plot(trw)
View(M)
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- 1:4
tr <- nj(M)
plot(tr, "u")
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- c("LosAngeles","SanFrancisco","Seattle","Sydney")
tr <- nj(M)
plot(tr, "u")
### From Saitou and Nei (1987, Table 1):
x <- c(348, 961, 7513, 680, 7435, 7760)
M <- matrix(0, 4, 4)
M[row(M) > col(M)] <- x
M[row(M) < col(M)] <- x
rownames(M) <- colnames(M) <- c("LosAngeles","SanFrancisco","Seattle","Sydney")
tr <- upgma(M)
plot(tr, "u")
?nj
View(M)
tr$edge
tr$edge.length
tr$tip.label
newick(tr)
?nj
write.tree(tr)
?avg
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest.csv"
data <- read.csv(filename,header=T)
X <- levels(data[,1])
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j]  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != NULL)]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
fix(S)
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j]  } ) )
fix(S)
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != NULL)]  )
fix(S)
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j]  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != NA)]  )
X <- levels(data[,1])
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
library(decisivatoR)
ans <- isdecisive(taxa=X,s=S)
library(decisivatoR)
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest.csv"
data <- read.csv(filename,header=T)
X <- levels(data[,1])
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
ans <- isdecisive(taxa=X,s=S)
fix(S)
library(decisivatoR)
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest_Rooted_Decisive.csv"
data <- read.csv(filename,header=T)
X <- levels(data[,1])
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
ans <- isdecisive(taxa=X,s=S)
print(ans)
library(decisivatoR)
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest_Unrooted_Decisive.csv"
data <- read.csv(filename,header=T)
X <- levels(data[,1])
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
ans <- isdecisive(taxa=X,s=S,unrooted=T)
print(ans)
library(decisivatoR)
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest_Unrooted_Decisive.csv"
data <- read.csv(filename,header=T)
X <- levels(data[,1])
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
ans <- isdecisive(taxa=X,s=S,unrooted=T)
library(decisivatoR)
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest_Unrooted_NotDecisive.csv"
data <- read.csv(filename,header=T)
X <- lapply(seq_len(dim(data)[1]), function(i) toString(data[i,1]))
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
fix(S)
fix(X)
fix(S)
fix(X)
X<-c(X)
fix(X)
X <- c(lapply(seq_len(dim(data)[1]), function(i) toString(data[i,1])))
fix(X)
fix(S)
a<-c("2","3")
fix(a)
X <- levels(data[,1])
X <- lapply(seq_len(dim(data)[1]), function(i) toString(data[i,1]))
as.character(X)
X <- as.character(lapply(seq_len(dim(data)[1]), function(i) toString(data[i,1])))
fix(X)
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
fix(S)
library(decisivatoR)
filename <- "~/Dropbox/DecisivatoR/Testing/SmallTest_Unrooted_NotDecisive.csv"
data <- read.csv(filename,header=T)
X <- as.character(lapply(seq_len(dim(data)[1]), function(i) toString(data[i,1])))
ans <- data.frame(data[,2:length(data)])
S <- lapply(seq_len(ncol(ans)), function(i) ans[,i])
S <- lapply( seq_len(length(S)), function(i) lapply( seq_len(length(S[[i]])), function(j) if ( S[[i]][j] == 1 ) { S[[i]][j] <- X[j] } else { S[[i]][j] <- "NA"  } ) )
S <- lapply( seq_len(length(S)), function(i) S[[i]] <- S[[i]][which(S[[i]] != "NA")]  )
S <- lapply( seq_len(length(S)), function(i) unlist(S[[i]]))
ans <- isdecisive(taxa=X,s=S,unrooted=T,T)
print(ans)
#ans<-lapply(seq_len(length(ans)), function(i) unique(ans[[i]]))
#ans
final <- matrix(0,ncol=length(ans),nrow=length(X))
rownames(final) <- c(levels(data[,1]))
colnames(final) <- colnames(data)[2:length(colnames(data))]
final<-as.table(final)
for(i in seq_len(length(ans))) {
for(j in seq_len(length(ans[[i]]))) {final[ ans[[i]][j], colnames(final)[i] ] <- 1}
}
data
final
ans <- isdecisive(filename,taxa=X,s=S,unrooted=T,T)
ans <- isdecisive(filename="~/Dropbox/DecisivatoR/Testing/SmallTest_Unrooted_NotDecisive.csv",taxa=X,s=S,unrooted=T,T)
library(decisivatoR)
ans <- isdecisive(filename="~/Dropbox/DecisivatoR/Testing/SmallTest_Unrooted_NotDecisive.csv",taxa=X,s=S,unrooted=T,T)
library(shiny)
options(browser='firefox')
setwd("~/Dropbox/DecisivatoR/www")
runApp(getwd(),launch.browser = getOption("shiny.launch.browser", interactive()))
runApp(getwd(),launch.browser = getOption("shiny.launch.browser", interactive()))
